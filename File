//readfile path of file
String path =" path1= Environment.getExternalStorageDirectory().getAbsolutePath() + "/TableFolder/"

    private void processReadFile(String path) {
        File file = new File(path);
        byte[] bFile = new byte[(int) file.length()];
        String strl = " ";

        try {
            //convert file into array of bytes
            fileInputStream = new FileInputStream(file);
            fileInputStream.read(bFile);
            fileInputStream.close();

            strl = new String(bFile, "UTF-8");

        } catch (Exception e) {
            e.printStackTrace();
        }
        String [] dataToWrite=strl.split("__");
    }
    
 //read file json in asset folder android studio 
   ArrayList<String> items=getCountries("countries.json");
  private ArrayList<String> getCountries(String fileName){
        JSONArray jsonArray=null;
        ArrayList<String> cList=new ArrayList<String>();
        try {
            InputStream is = getResources().getAssets().open("country.json");
            int size = is.available();
            byte[] data = new byte[size];
            is.read(data);
            is.close();
            String json = new String(data, "UTF-8");
            jsonArray=new JSONArray(json);
            if (jsonArray != null) {
                for (int i = 0; i < jsonArray.length(); i++) {
                    cList.add(jsonArray.getJSONObject(i).getString("cname"));
                }
            }
        }catch (IOException e){
            e.printStackTrace();
        }catch (JSONException je){
            je.printStackTrace();
        }
        return cList;
    }
 
 
    
    //write/savefile
    
      public void saveTableToLocalFile(String extraTag){

        //Log.d(TAG, "allDataMod : " + allDataMod.toString());
        String currentOpenFileNameS = currentOpenFileName.replace(".txt", "");
        path1= Environment.getExternalStorageDirectory().getAbsolutePath() + "/TableFolder/";

        //create new file evertime user want to save as new file as .txt
        saveTable = new File(Environment.getExternalStorageDirectory().getAbsolutePath() + "/FileFolder/" + currentOpenFileNameS + "_MOD" + extraTag + ".txt");

        FileOutputStream out;
        try {
            out = new FileOutputStream(saveTable);


                out.write(allcombinedata.getBytes());
                out.close();



            //save dalam ni

            //statusTv.setText("Current Map was successfully saved in local drive");
            // sv.setText("Modified Map was successfully saved in local drive");
        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            Toast.makeText(FileProcess.this, "File Not Save", Toast.LENGTH_SHORT).show();

            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        Toast.makeText(FileProcess.this, "File Save", Toast.LENGTH_SHORT).show();


    }
    
    
    //show list of file 
   
    private void sendRestoreRequest2() {

        String path = Environment.getExternalStorageDirectory().getAbsolutePath() + "/TuneBossData/Tables/";
        File root = new File(path);
        root.mkdirs(); //make directory
        Log.d("test1",String.valueOf(root.getAbsolutePath()));

        // ListDir(root,listFile);
        final File[] files = root.listFiles();   //array and list all file
        fileList.clear();               //clear the list
        Log.d("test1",String.valueOf(files.length));

        ArrayList<String> fNameArrayList = new ArrayList<>();
        ArrayList<String> fAbsPathArrayList = new ArrayList<>();

        for (int i=0; i < files.length; i++)
        {
            String fName =  files[i].getName();
            String fAbsPath = files[i].getAbsolutePath();

            if (getFileExt(fName).equalsIgnoreCase("txt"))
            {
                fNameArrayList.add(fName);
                fAbsPathArrayList.add(fAbsPath);
            }
        }
        
           public static String getFileExt(String FileName)
    {
        return FileName.substring((FileName.lastIndexOf(".") + 1), FileName.length());
    }


        if (fNameArrayList.size() > 0)
        {
            String[] fNameStringArray = fNameArrayList.toArray(new String[fNameArrayList.size()]);
            String[] fAbsPathStringArray = fAbsPathArrayList.toArray(new String[fAbsPathArrayList.size()]);
            popUpFileChoice(fNameStringArray,fAbsPathStringArray);
        }

        fNameArrayList.clear();
        fAbsPathArrayList.clear();

    }
