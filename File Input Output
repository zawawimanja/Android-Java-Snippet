//readfile


String path =" path1= Environment.getExternalStorageDirectory().getAbsolutePath() + "/TableFolder/"

    private void processReadFile(String path) {
        File file = new File(path);
        byte[] bFile = new byte[(int) file.length()];
        String strl = " ";

        try {
            //convert file into array of bytes
            fileInputStream = new FileInputStream(file);
            fileInputStream.read(bFile);
            fileInputStream.close();

            strl = new String(bFile, "UTF-8");

        } catch (Exception e) {
            e.printStackTrace();
        }
        String [] dataToWrite=strl.split("__");
    

    }
    
    //write/savefile
    
      public void saveTableToLocalFile(String extraTag){

        //Log.d(TAG, "allDataMod : " + allDataMod.toString());
        String currentOpenFileNameS = currentOpenFileName.replace(".txt", "");
        path1= Environment.getExternalStorageDirectory().getAbsolutePath() + "/TableFolder/";

        //create new file evertime user want to save as new file as .txt
        saveTable = new File(Environment.getExternalStorageDirectory().getAbsolutePath() + "/FileFolder/" + currentOpenFileNameS + "_MOD" + extraTag + ".txt");

        FileOutputStream out;
        try {
            out = new FileOutputStream(saveTable);


                out.write(allcombinedata.getBytes());
                out.close();



            //save dalam ni

            //statusTv.setText("Current Map was successfully saved in local drive");
            // sv.setText("Modified Map was successfully saved in local drive");
        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            Toast.makeText(FileProcess.this, "File Not Save", Toast.LENGTH_SHORT).show();

            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        Toast.makeText(FileProcess.this, "File Save", Toast.LENGTH_SHORT).show();


    }
